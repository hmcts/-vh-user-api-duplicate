# Set variables once
variables:
  cleanCheckout: true
  apiDirectory: 'UserApi/UserApi'
  sonarCloudPrepareExtraProperties: |
    sonar.cs.opencover.reportsPaths=$(Common.TestResultsDirectory)\Coverage\coverage.opencover.xml
    sonar.coverage.exclusions="**/Program.cs,**/Startup.cs,Migrations/**,SeedData/**,DesignTimeHearingsContextFactory.cs,Ddd/ValueObject.cs,Ddd/Enumeration.cs,Testing.Common/**"
    sonar.cpd.exclusions="**/SeedData.cs,Migrations/**"
  coverletCoverageExclusions: '"\"[UserApi.*Tests?]*,[UserApi.API]Startup,[UserApi.Common]*,[Testing.Common]*\""'
  integrationTestsAppSettingsTransform: '
    "AzureAd/ClientId":"$(vh-user-api-appid)",
    "AzureAd/ClientSecret":"$(vh-user-api-key)",
    "AzureAd/TenantId":"$(tenantid)",
    "AzureAd/VhUserApiResourceId":"$(vh-user-api-identifieruris)",
    "Testing/TestClientId":"$(vh-admin-web-appid)",
    "Testing/TestClientSecret":"$(vh-admin-web-key)"
    '
  dalWorkingDirectory: ''
  keyVaultName: vhcoreinfrahtdev # Used to get secrets for integration tests
  secretsFilter: 'vh-user-api-appid,vh-user-api-key,vh-admin-web-appid,vh-admin-web-key,tenantid,vh-user-api-identifieruris' # filters out secrets returned from key vault

# GitHub Repo that conatins build templates. Reference https://docs.microsoft.com/en-us/azure/devops/pipelines/process/templates?view=vsts#using-other-repositories
resources:
  repositories:
  - repository: azureDevOpsTemplates
    type: github
    name: hmcts/azure-devops-templates
    ref: refs/heads/dotnet-restore # ref name to use, defaults to 'refs/heads/master'
    endpoint: 'GitHub connection 1'

trigger:
- master
pr:
- master

jobs:
  
- template: jobs/angularDotNetCore.yml@azureDevOpsTemplates # Template reference
  parameters:
    cleanCheckout: $(cleanCheckout)
    sonarCloudExtraProperties: $(sonarCloudPrepareExtraProperties)
    integrationTestsAppSettingsTransform: $(integrationTestsAppSettingsTransform)
    coverletCoverageExclusions: $(coverletCoverageExclusions)
    apiDirectory: $(apiDirectory)
    dalWorkingDirectory: $(dalWorkingDirectory)
    keyVaultName: $(keyVaultName)
    secretsFilter: $(secretsFilter)